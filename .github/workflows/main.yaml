name: CI
on: [push, pull_request]

jobs:
  build-test-publish:
    # For tag pushes, we want to assure only the tag event triggers CI,
    # not the accompanying commit:
    if: "! startsWith(github.event.head_commit.message, 'Bump ') || startsWith(github.ref, 'refs/tags/')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main

      - name: Add miniconda to PATH
        run: echo "PATH=${HOME}/miniconda/bin:${PATH}" >> $GITHUB_ENV

      - name: Setup conda
        run: |
          wget https://repo.anaconda.com/miniconda/Miniconda3-py38_4.9.2-Linux-x86_64.sh \
            --no-verbose -O miniconda.sh
          bash miniconda.sh -b -p ${HOME}/miniconda
          conda config --set always_yes yes --set changeps1 no
          # Installing mamba, which is a much faster alternative for conda
          conda install -c conda-forge mamba
          # The channel declared last has the highest priority. So it's making sure that
          # our CPG build of Hail is installed instead of the bioconda one
          conda config --add channels bioconda --add channels conda-forge --add channels cpg
          # Installing the tools needed to build and publish the package
          mamba install pip conda-build conda-verify anaconda-client

      - name: Build package
        run: mamba build conda/$(basename $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]')

      - name: Install into the test environment
        if: "!startsWith(github.ref, 'refs/tags/')"
        run: |
          # Using local build as we didn't push the tarball to anaconda yet
          mamba create -n testenv --use-local \
          $(basename $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]')

      - name: Activate the test environment
        run: echo "PATH=${HOME}/miniconda/envs/testenv/bin:${PATH}" >> $GITHUB_ENV

      # We only need gcloud to pull gnomad reference file from public buckets,
      # So the service account doesn't need to have any spending allowance
      - id: gcloud
        if: "!startsWith(github.ref, 'refs/tags/')"
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: "${{ secrets.GCP_PROJECT_ID }}"
          service_account_key: "${{ secrets.GCP_SA_KEY }}"
          export_default_credentials: true

      - name: Install GCS connector
        if: "!startsWith(github.ref, 'refs/tags/')"
        run: |
          wget https://broad.io/install-gcs-connector
          python install-gcs-connector -k "${GOOGLE_APPLICATION_CREDENTIALS}"

      - name: Run tests
        if: "!startsWith(github.ref, 'refs/tags/')"
        run: |
          cd test
          source test_combine_gvcfs.sh
          source test_sample_qc.sh

      - name: Upload to anaconda package repository
        if: "startsWith(github.ref, 'refs/tags/')"
        run: |
          anaconda -t ${{ secrets.ANACONDA_TOKEN }} \
          upload ${HOME}/miniconda/conda-bld/**/*.tar.bz2
