include required(classpath("application"))
google {
  application-name = "cromwell"
  auths = [
    { 
      name = "service_account"
      scheme = "service_account"
      service-account-id = "785770243118-compute@developer.gserviceaccount.com"
      json-file = "/Users/vsaveliev/vlad-dev-f2ee54c9aca4.json"
    }
  ]
}
engine {
  filesystems {
    gcs {
      auth = "service_account"
      project = "vlad-dev"
    }
  }
}
backend {
  default = "JES"
  providers {
    JES {
      actor-factory = "cromwell.backend.impl.jes.JesBackendLifecycleActorFactory"
      config {
        // Google project
        project = "vlad-dev"
        compute-service-account = "default"

        // Base bucket for workflow executions
        root = "gs://playground-us-central1/warp/"

        // Polling for completion backs-off gradually for slower-running jobs.
        // This is the maximum polling interval (in seconds):
        maximum-polling-interval = 600

        // Optional Dockerhub Credentials. Can be used to access private docker images.
        genomics {
          // A reference to an auth defined in the `google` stanza at the top.  This auth is used to create
          // Pipelines and manipulate auth JSONs.
          auth = "service_account"
          // Endpoint for APIs, no reason to change this unless directed by Google.
          endpoint-url = "https://genomics.googleapis.com/"
          // This allows you to use an alternative service account to launch jobs, by default uses default service account
          compute-service-account = "default"
        }
        filesystems {
          gcs {
            // A reference to a potentially different auth for manipulating files via engine functions.
            auth = "service_account"
          }
        }
      }
    }
  }
}
system {
  input-read-limits {
      lines = 1280000
      bool = 7
      int = 19
      float = 50
      string = 1280000
      json = 1280000
      tsv = 1280000
      map = 1280000
      object = 1280000
    }
}